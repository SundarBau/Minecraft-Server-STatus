<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Server Status</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
  <style>
    :root { color-scheme: dark; }
    html, body { height: 100%; }
    body { font-family: 'Outfit', system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif; }
    .glass { backdrop-filter: blur(8px); background: linear-gradient(180deg, rgba(255,255,255,0.08), rgba(255,255,255,0.04)); }
    .mc-font { font-family: 'Outfit', ui-sans-serif, system-ui; }
    ::-webkit-scrollbar { width: 10px; height: 10px; }
    ::-webkit-scrollbar-thumb { background: #374151; border-radius: 8px; }
    ::-webkit-scrollbar-track { background: #0f172a; }
    .badge { @apply text-xs px-2 py-1 rounded-full font-medium; }
  </style>
</head>
<body class="min-h-screen bg-gradient-to-b from-slate-950 via-slate-900 to-slate-950 text-slate-100">
  <div class="max-w-6xl mx-auto p-4 md:p-8">
    <!-- Header -->
    <header class="flex flex-col md:flex-row items-center justify-between gap-4 mb-6">
      <div class="flex items-center gap-3">
        <img src="https://media.discordapp.net/attachments/1383825842072977452/1405193354563817543/New_Project.png?ex=689defca&is=689c9e4a&hm=55f84afb213155cf1013c2a15c97d2d63133d13e65af6068cfe2ce8059931736&=&format=webp&quality=lossless" alt="MC" class="w-10 h-10">
        <div>
          <h1 class="text-2xl md:text-3xl font-extrabold tracking-tight">bAlE</h1>
          <p class="text-slate-400 text-sm">Pretty Checker </p>
        </div>
      </div>
      <div class="flex items-center gap-2 text-xs text-slate-400">
        <span class="hidden md:inline">BabE</span>
      </div>
    </header>

    <!-- Input Card -->
    <section class="glass rounded-2xl border border-white/10 shadow-xl p-4 md:p-6">
      <div class="flex flex-col md:flex-row gap-3 md:gap-4 items-stretch md:items-end">
        <div class="flex-1">
          <label class="block text-sm text-slate-300">Server IP Or Domain</label>
          <input id="serverInput" type="text" placeholder="play.example.com or 1.2.3.4" class="w-full mt-1 px-4 py-3 rounded-xl bg-slate-900/70 border border-white/10 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
        </div>
        <div class="w-full md:w-36">
          <label class="block text-sm text-slate-300">Port (optional)</label>
          <input id="portInput" type="number" placeholder="25565" class="w-full mt-1 px-4 py-3 rounded-xl bg-slate-900/70 border border-white/10 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
        </div>
        <div class="flex items-center gap-2 w-full md:w-auto">
          <button id="checkBtn" class="w-full md:w-auto px-5 py-3 rounded-xl bg-indigo-600 hover:bg-indigo-500 active:scale-[.99] font-semibold">Check Status</button>
          <button id="copyBtn" title="Copy IP" class="px-4 py-3 rounded-xl bg-slate-800 hover:bg-slate-700 border border-white/10">Copy</button>
        </div>
      </div>
      <div class="mt-3 flex items-center gap-3 text-xs text-slate-400 flex-wrap">
        <span>Examples:</span>
        <button class="example badge bg-slate-800 hover:bg-slate-700" data-host="play.isekainetwork.fun">play.isekainetwork.fun</button>
        <button class="example badge bg-slate-800 hover:bg-slate-700" data-host="np.everestrealms.fun">np.everestrealms.fun</button>
        <button class="example badge bg-slate-800 hover:bg-slate-700" data-host="play.minecraftnepal.com" >play.minecraftnepal.com</button>
        <button class="example badge bg-slate-800 hover:bg-slate-700" data-host="play.craftnepal.net">play.craftnepal.net</button>
        <label class="inline-flex items-center gap-2 ml-auto text-slate-400">
          <input id="autoRefresh" type="checkbox" class="w-4 h-4 rounded bg-slate-900 border-white/10"> Auto-refresh (30s)
        </label>
      </div>
    </section>

    <!-- Results -->
    <section id="result" class="mt-6 hidden">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Main Card -->
        <div class="lg:col-span-2 glass rounded-2xl border border-white/10 shadow-xl p-5">
          <div class="flex items-start gap-4">
            <img id="icon" class="w-16 h-16 rounded-xl border border-white/10" alt="Server Icon">
            <div class="flex-1 min-w-0">
              <div class="flex items-center gap-3 flex-wrap">
                <h2 id="serverName" class="text-xl md:text-2xl font-bold truncate">—</h2>
                <span id="onlineBadge" class="badge bg-red-600/80 border border-white/10">Offline</span>
                <span id="edition" class="badge bg-slate-800/80 border border-white/10">Java</span>
              </div>
              <div class="mt-1 text-sm text-slate-400 flex flex-wrap gap-x-4 gap-y-1">
                <span id="ipText">—</span>
                <span id="versionText">—</span>
                <span id="protocolText" class="hidden">—</span>
              </div>
            </div>
            <div class="text-right">
              <div class="text-3xl font-extrabold" id="playerCount">0/0</div>
              <div class="text-xs text-slate-400">Players</div>
            </div>
          </div>

          <div class="mt-4">
            <div class="w-full bg-slate-800/70 rounded-xl overflow-hidden h-3 border border-white/10">
              <div id="playerBar" class="h-3 bg-indigo-500" style="width:0%"></div>
            </div>
          </div>

          <div class="mt-4">
            <div id="motd" class="text-slate-200 mc-font whitespace-pre-wrap"></div>
          </div>

          <div class="mt-4 grid grid-cols-2 md:grid-cols-4 gap-3">
            <div class="glass rounded-xl p-3 border border-white/10">
              <div class="text-xs text-slate-400">Ping Server</div>
              <div id="ping" class="text-lg font-semibold">—</div>
            </div>
            <div class="glass rounded-xl p-3 border border-white/10">
              <div class="text-xs text-slate-400">Software</div>
              <div id="software" class="text-lg font-semibold truncate">—</div>
            </div>
            <div class="glass rounded-xl p-3 border border-white/10">
              <div class="text-xs text-slate-400">EULA</div>
              <div id="eula" class="text-lg font-semibold">—</div>
            </div>
            <div class="glass rounded-xl p-3 border border-white/10">
              <div class="text-xs text-slate-400">Last Check</div>
              <div id="checkedAt" class="text-lg font-semibold">—</div>
            </div>
          </div>
        </div>

        <!-- Side Card: Details -->
        <div class="glass rounded-2xl border border-white/10 shadow-xl p-5">
          <h3 class="font-semibold text-lg mb-3">Details</h3>
          <dl class="grid grid-cols-1 gap-2 text-sm">
            <div class="flex items-center justify-between gap-2">
              <dt class="text-slate-400">Resolved IP</dt>
              <dd id="resolved" class="font-medium">—</dd>
            </div>
            <div class="flex items-center justify-between gap-2">
              <dt class="text-slate-400">Port</dt>
              <dd id="portOut" class="font-medium">—</dd>
            </div>
            <div class="flex items-center justify-between gap-2">
              <dt class="text-slate-400">SRV Target</dt>
              <dd id="srv" class="font-medium">—</dd>
            </div>
            <div class="flex items-center justify-between gap-2">
              <dt class="text-slate-400">Players List</dt>
              <dd id="playersList" class="font-medium text-right truncate">—</dd>
            </div>
          </dl>
          <p class="mt-4 text-xs text-slate-500">Some Features Not Wokring </p>
        </div>
      </div>
    </section>

    <!-- Footer -->
    <footer class="mt-10 text-center text-xs text-slate-500">
      <p>© bAlE 2025. Built with <a class="underline decoration-dotted" href="https://api.mcsrvstat.us/" target="_blank" rel="noreferrer">mcsrvstat.us</a>.</p>
    </footer>
  </div>

  <script>
    const $ = (id) => document.getElementById(id);
    const serverInput = $('serverInput');
    const portInput = $('portInput');
    const checkBtn = $('checkBtn');
    const copyBtn = $('copyBtn');
    const result = $('result');

    const ui = {
      icon: $('icon'), serverName: $('serverName'), onlineBadge: $('onlineBadge'), edition: $('edition'),
      ipText: $('ipText'), versionText: $('versionText'), protocolText: $('protocolText'),
      playerCount: $('playerCount'), playerBar: $('playerBar'), motd: $('motd'),
      ping: $('ping'), software: $('software'), eula: $('eula'), checkedAt: $('checkedAt'),
      resolved: $('resolved'), portOut: $('portOut'), srv: $('srv'), playersList: $('playersList')
    };

    document.querySelectorAll('.example').forEach(btn => {
      btn.addEventListener('click', () => {
        const host = btn.dataset.host;
        const [h, p] = host.split(':');
        serverInput.value = h; portInput.value = p || '';
        checkStatus();
      });
    });

    copyBtn.addEventListener('click', async () => {
      const text = [serverInput.value.trim(), portInput.value.trim()].filter(Boolean).join(':');
      if (!text) return;
      await navigator.clipboard.writeText(text);
      copyBtn.textContent = 'Copied!';
      setTimeout(() => (copyBtn.textContent = 'Copy'), 1200);
    });

    checkBtn.addEventListener('click', checkStatus);
    [serverInput, portInput].forEach(el => el.addEventListener('keydown', (e) => { if (e.key === 'Enter') checkStatus(); }));

    function fmtDate(d){ return new Intl.DateTimeFormat(undefined, { dateStyle: 'medium', timeStyle: 'short' }).format(d); }

    function renderMotd(lines) {
      if (!lines || !Array.isArray(lines)) return '';
      const colorMap = { '0':'#000000','1':'#0000AA','2':'#00AA00','3':'#00AAAA','4':'#AA0000','5':'#AA00AA','6':'#FFAA00','7':'#AAAAAA','8':'#555555','9':'#5555FF','a':'#55FF55','b':'#55FFFF','c':'#FF5555','d':'#FF55FF','e':'#FFFF55','f':'#FFFFFF' };
      const fmtMap = { 'l':'font-weight:bold', 'o':'font-style:italic', 'n':'text-decoration:underline', 'm':'text-decoration:line-through' };
      const reset = () => ({ color:'#FFFFFF', styles:new Set() });
      const span = (text, s) => `<span style="color:${s.color};${Array.from(s.styles).join(';')}">${text}</span>`;
      let state = reset();
      let out = '';
      for (let i=0;i<lines.length;i++){
        const line = lines[i]; let buf='';
        for (let j=0;j<line.length;j++){
          if (line[j]==='§' && j+1<line.length){ if(buf){ out+=span(buf,state); buf=''; } const code=line[j+1].toLowerCase(); if(colorMap[code]){state.color=colorMap[code];state.styles.clear();} else if(code==='r'){state=reset();} else if(fmtMap[code]){state.styles.add(fmtMap[code]);} j++; } else { buf+=line[j]; }
        }
        if(buf) out+=span(buf,state); if(i<lines.length-1) out+='<br>';
      }
      return out;
    }

    async function checkStatus(){
      const host = serverInput.value.trim();
      const port = portInput.value.trim() || '';
      if (!host) return;
      const query = port ? `${host}:${port}` : host;
      const url = `https://api.mcsrvstat.us/3/${encodeURIComponent(query)}`;

      checkBtn.disabled=true; checkBtn.textContent='Checking...';
      try {
        const res = await fetch(url, { cache: 'no-store' });
        const data = await res.json();
        renderData(host, port, data);
        result.classList.remove('hidden');
      } catch(e){
        console.error(e);
        showError(host, port);
        result.classList.remove('hidden');
      } finally { checkBtn.disabled=false; checkBtn.textContent='Check Status'; }
    }

    function showError(host, port){
      ui.icon.src='';
      ui.serverName.textContent=host;
      ui.onlineBadge.textContent='Offline';
      ui.onlineBadge.className='badge bg-red-600/80 border border-white/10';
      ui.edition.textContent='Java';
      ui.ipText.textContent=`${host}${port?':' + port:''}`;
      ui.versionText.textContent='—';
      ui.playerCount.textContent='0/0';
      ui.playerBar.style.width='0%';
      ui.motd.innerHTML='';
      ui.ping.textContent='—';
      ui.software.textContent='—';
      ui.eula.textContent='—';
      ui.checkedAt.textContent=fmtDate(new Date());
      ui.resolved.textContent='—';
      ui.portOut.textContent=port || '25565';
      ui.srv.textContent='—';
      ui.playersList.textContent='—';
    }

    function renderData(host, port, d){
      const online=!!d?.online;
      const ip=d?.ip||host;
      const portOut=d?.port||port||25565;
      const version=d?.version||'—';
      const playersNow=d?.players?.online||0;
      const playersMax=d?.players?.max||0;
      const playerPct=playersMax?Math.min(100,Math.round((playersNow/playersMax)*100)):0;
      const motdHtml=renderMotd(d?.motd?.raw||[]);
      const pingValue=d?.debug?.ping?`${d.debug.ping} ms`:'—';
      const srv=d?.srv_record?.target?`${d.srv_record.target}:${d.srv_record.port}`:(d?.hostname||'—');
      const icon=d?.icon?`data:image/png;base64,${d.icon.replace(/^data:image\/png;base64,/,'')}`:'https://raw.githubusercontent.com/ikerstream/mc-icons/main/grass.png';
      const playersList=Array.isArray(d?.players?.list)&&d.players.list.length?d.players.list.join(', '):'—';

      ui.icon.src=icon;
      ui.serverName.textContent=host;
      ui.onlineBadge.textContent=online?'Online':'Offline';
      ui.onlineBadge.className=online?'badge bg-emerald-600/80 border border-white/10':'badge bg-red-600/80 border border-white/10';
      ui.edition.textContent='Java';
      ui.ipText.textContent=`${ip}:${portOut}`;
      ui.versionText.textContent=version;
      ui.playerCount.textContent=`${playersNow}/${playersMax}`;
      ui.playerBar.style.width=playerPct+'%';
      ui.motd.innerHTML=motdHtml;
      ui.ping.textContent=pingValue;
      ui.software.textContent=version;
      ui.eula.textContent=d?.eula_blocked===true?'Blocked':(d?.eula_blocked===false?'OK':'—');
      ui.checkedAt.textContent=fmtDate(new Date());
      ui.resolved.textContent=ip;
      ui.portOut.textContent=portOut;
      ui.srv.textContent=srv;
      ui.playersList.textContent=playersList;
    }
  </script>
</body>
</html>
