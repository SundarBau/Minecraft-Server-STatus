<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Server Status v2</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
  <style>
    :root { color-scheme: dark; }
    html, body { height: 100%; }
    body { font-family: 'Outfit', system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif; }
    .glass { backdrop-filter: blur(8px); background: linear-gradient(180deg, rgba(255,255,255,0.08), rgba(255,255,255,0.04)); }
    .mc-font { font-family: 'Outfit', ui-sans-serif, system-ui; }
    ::-webkit-scrollbar { width: 10px; height: 10px; }
    ::-webkit-scrollbar-thumb { background: #374151; border-radius: 8px; }
    ::-webkit-scrollbar-track { background: #0f172a; }
    .badge { @apply text-xs px-2 py-1 rounded-full font-medium; }
    .spinner { border: 4px solid rgba(255,255,255,0.2); border-top: 4px solid #4f46e5; border-radius: 50%; width: 40px; height: 40px; animation: spin 1s linear infinite; margin:auto; }
    @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
  </style>
</head>
<body class="min-h-screen bg-gradient-to-b from-slate-950 via-slate-900 to-slate-950 text-slate-100">
  <div class="max-w-6xl mx-auto p-4 md:p-8">
    <!-- Header -->
    <header class="flex flex-col md:flex-row items-center justify-between gap-4 mb-6">
      <div class="flex items-center gap-3">
        <img src="https://media.discordapp.net/attachments/1383825842072977452/1405193354563817543/New_Project.png" alt="MC" class="w-10 h-10">
        <div>
          <h1 class="text-2xl md:text-3xl font-extrabold tracking-tight">bAlE</h1>
          <p class="text-slate-400 text-sm">Pretty Checker v2</p>
        </div>
      </div>
      <div class="flex items-center gap-2 text-xs text-slate-400">
        <span class="hidden md:inline">BabE</span>
      </div>
    </header>

    <!-- Input Card -->
    <section class="glass rounded-2xl border border-white/10 shadow-xl p-4 md:p-6">
      <div class="flex flex-col md:flex-row gap-3 md:gap-4 items-stretch md:items-end">
        <div class="flex-1">
          <label class="block text-sm text-slate-300">Server IP Or Domain</label>
          <input id="serverInput" type="text" placeholder="play.example.com or 1.2.3.4" class="w-full mt-1 px-4 py-3 rounded-xl bg-slate-900/70 border border-white/10 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
        </div>
        <div class="w-full md:w-36">
          <label class="block text-sm text-slate-300">Port (optional)</label>
          <input id="portInput" type="number" placeholder="25565" class="w-full mt-1 px-4 py-3 rounded-xl bg-slate-900/70 border border-white/10 focus:outline-none focus:ring-2 focus:ring-indigo-500" />
        </div>
        <div class="flex items-center gap-2 w-full md:w-auto">
          <button id="checkBtn" class="w-full md:w-auto px-5 py-3 rounded-xl bg-indigo-600 hover:bg-indigo-500 active:scale-[.99] font-semibold">Check Status</button>
          <button id="copyBtn" title="Copy IP" class="px-4 py-3 rounded-xl bg-slate-800 hover:bg-slate-700 border border-white/10">Copy</button>
        </div>
      </div>
      <div class="mt-3 flex items-center gap-3 text-xs text-slate-400 flex-wrap">
        <span>Examples:</span>
        <button class="example badge bg-slate-800 hover:bg-slate-700" data-host="play.isekainetwork.fun">play.isekainetwork.fun</button>
        <button class="example badge bg-slate-800 hover:bg-slate-700" data-host="np.everestrealms.fun">np.everestrealms.fun</button>
        <button class="example badge bg-slate-800 hover:bg-slate-700" data-host="play.minecraftnepal.com">play.minecraftnepal.com</button>
        <button class="example badge bg-slate-800 hover:bg-slate-700" data-host="play.craftnepal.net">play.craftnepal.net</button>
        <label class="inline-flex items-center gap-2 ml-auto text-slate-400">
          <input id="autoRefresh" type="checkbox" class="w-4 h-4 rounded bg-slate-900 border-white/10"> Auto-refresh (30s)
        </label>
      </div>
    </section>

    <!-- Loading Spinner -->
    <div id="loading" class="hidden mt-6 text-center">
      <div class="spinner"></div>
    </div>

    <!-- Results -->
    <section id="result" class="mt-6 hidden">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Main Card -->
        <div class="lg:col-span-2 glass rounded-2xl border border-white/10 shadow-xl p-5">
          <div class="flex items-start gap-4">
            <img id="icon" class="w-16 h-16 rounded-xl border border-white/10" alt="Server Icon">
            <div class="flex-1 min-w-0">
              <div class="flex items-center gap-3 flex-wrap">
                <h2 id="serverName" class="text-xl md:text-2xl font-bold truncate">—</h2>
                <span id="onlineBadge" class="badge bg-red-600/80 border border-white/10">Offline</span>
                <span id="edition" class="badge bg-slate-800/80 border border-white/10">Java</span>
              </div>
              <div class="mt-1 text-sm text-slate-400 flex flex-wrap gap-x-4 gap-y-1">
                <span id="ipText">—</span>
                <span id="versionText">—</span>
                <span id="protocolText" class="hidden">—</span>
              </div>
            </div>
            <div class="text-right">
              <div class="text-3xl font-extrabold" id="playerCount">0/0</div>
              <div class="text-xs text-slate-400">Players</div>
            </div>
          </div>

          <div class="mt-4">
            <div class="w-full bg-slate-800/70 rounded-xl overflow-hidden h-3 border border-white/10">
              <div id="playerBar" class="h-3 bg-indigo-500" style="width:0%"></div>
            </div>
          </div>

          <div class="mt-4">
            <div id="motd" class="text-slate-200 mc-font whitespace-pre-wrap"></div>
          </div>

          <div class="mt-4 grid grid-cols-2 md:grid-cols-4 gap-3">
            <div class="glass rounded-xl p-3 border border-white/10">
              <div class="text-xs text-slate-400">Ping Server</div>
              <div id="ping" class="text-lg font-semibold">—</div>
            </div>
            <div class="glass rounded-xl p-3 border border-white/10">
              <div class="text-xs text-slate-400">Software</div>
              <div id="software" class="text-lg font-semibold truncate">—</div>
            </div>
            <div class="glass rounded-xl p-3 border border-white/10">
              <div class="text-xs text-slate-400">EULA</div>
              <div id="eula" class="text-lg font-semibold">—</div>
            </div>
            <div class="glass rounded-xl p-3 border border-white/10">
              <div class="text-xs text-slate-400">Last Check</div>
              <div id="checkedAt" class="text-lg font-semibold">—</div>
            </div>
          </div>
        </div>

        <!-- Side Card: Details -->
        <div class="glass rounded-2xl border border-white/10 shadow-xl p-5">
          <h3 class="font-semibold text-lg mb-3">Details</h3>
          <dl class="grid grid-cols-1 gap-2 text-sm">
            <div class="flex items-center justify-between gap-2">
              <dt class="text-slate-400">Resolved IP</dt>
              <dd id="resolved" class="font-medium">—</dd>
            </div>
            <div class="flex items-center justify-between gap-2">
              <dt class="text-slate-400">Port</dt>
              <dd id="portOut" class="font-medium">—</dd>
            </div>
            <div class="flex items-center justify-between gap-2">
              <dt class="text-slate-400">SRV Target</dt>
              <dd id="srv" class="font-medium">—</dd>
            </div>
            <div class="flex items-center justify-between gap-2">
              <dt class="text-slate-400">Players List</dt>
              <dd id="playersList" class="font-medium text-right truncate">—</dd>
            </div>
          </dl>
          <p class="mt-4 text-xs text-slate-500">Some features may not work.</p>
        </div>
      </div>

      <!-- Suggestions -->
      <div id="suggestions" class="mt-6 glass rounded-2xl border border-white/10 shadow-xl p-5 hidden">
        <h3 class="font-semibold text-lg mb-3">Suggestions</h3>
        <ul id="suggestionList" class="list-disc list-inside text-sm text-slate-300"></ul>
      </div>
    </section>

    <!-- Footer -->
    <footer class="mt-10 text-center text-xs text-slate-500">
      <p>© bAlE 2025. Built with <a class="underline decoration-dotted" href="https://api.mcsrvstat.us/" target="_blank" rel="noreferrer">mcsrvstat.us</a>.</p>
    </footer>
  </div>

  <script>
    const $ = (id) => document.getElementById(id);
    const serverInput = $('serverInput');
    const portInput = $('portInput');
    const checkBtn = $('checkBtn');
    const copyBtn = $('copyBtn');
    const result = $('result');
    const loading = $('loading');
    const suggestionsContainer = $('suggestions');
    const suggestionList = $('suggestionList');

    const ui = {
      icon: $('icon'), serverName: $('serverName'), onlineBadge: $('onlineBadge'), edition: $('edition'),
      ipText: $('ipText'), versionText: $('versionText'), protocolText: $('protocolText'),
      playerCount: $('playerCount'), playerBar: $('playerBar'), motd: $('motd'),
      ping: $('ping'), software: $('software'), eula: $('eula'), checkedAt: $('checkedAt'),
      resolved: $('resolved'), portOut: $('portOut'), srv: $('srv'), playersList: $('playersList')
    };

    document.querySelectorAll('.example').forEach(btn => {
      btn.addEventListener('click', () => {
        const host = btn.dataset.host;
        const [h, p] = host.split(':');
        serverInput.value = h; portInput.value = p || '';
        checkStatus();
      });
    });

    copyBtn.addEventListener('click', async () => {
      const text = [serverInput.value.trim(), portInput.value.trim()].filter(Boolean).join(':');
      if (!text) return;
      await navigator.clipboard.writeText(text);
      copyBtn.textContent = 'Copied!';
      setTimeout(() => (copyBtn.textContent = 'Copy'), 1200);
    });

    checkBtn.addEventListener('click', checkStatus);
    [serverInput, portInput].forEach(el => el.addEventListener('keydown', (e) => { if (e.key === 'Enter') checkStatus(); }));

    function fmtDate(d){ return new Intl.DateTimeFormat(undefined, { dateStyle: 'medium', timeStyle: 'short' }).format(d); }

    function renderMotd(lines) {
      if (!lines) return '';
      const colorMap = {
        '0':'#000000','1':'#0000AA','2':'#00AA00','3':'#00AAAA','4':'#AA0000',
        '5':'#AA00AA','6':'#FFAA00','7':'#AAAAAA','8':'#555555','9':'#5555FF',
        'a':'#55FF55','b':'#55FFFF','c':'#FF5555','d':'#FF55FF','e':'#FFFF55','f':'#FFFFFF'
      };

      function obfuscateText(text){
        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        return text.split('').map(c => chars[Math.floor(Math.random()*chars.length)]).join('');
      }

      return lines.map(line => {
        let result = '';
        let color='#FFFFFF', bold=false, italic=false, underline=false, strikethrough=false, obfuscated=false;
        const parts = line.split(/(§#(?:[0-9A-Fa-f]{6})|§[0-9a-frklmn])/gi);

        parts.forEach(part=>{
          if(!part) return;
          const hexMatch = part.match(/§#([0-9A-Fa-f]{6})/);
          const codeMatch = part.match(/§([0-9a-frklmn])/i);

          if(hexMatch) {
            color = `#${hexMatch[1]}`;
          } else if(codeMatch) {
            const code=codeMatch[1].toLowerCase();
            if('0123456789abcdef'.includes(code)) color=colorMap[code];
            else if(code==='l') bold=true;
            else if(code==='o') italic=true;
            else if(code==='n') underline=true;
            else if(code==='m') strikethrough=true;
            else if(code==='k') obfuscated=true;
            else if(code==='r') color='#FFFFFF', bold=italic=underline=strikethrough=obfuscated=false;
          } else {
            let text=obfuscated?obfuscateText(part):part;
            let style=`color:${color};`;
            if(bold) style+='font-weight:bold;';
            if(italic) style+='font-style:italic;';
            if(underline && strikethrough) style+='text-decoration:underline line-through;';
            else if(underline) style+='text-decoration:underline;';
            else if(strikethrough) style+='text-decoration:line-through;';
            result+=`<span style="${style}">${text}</span>`;
          }
        });
        return result;
      }).join('<br>');
    }

    async function checkStatus(){
      const host = serverInput.value.trim();
      const port = portInput.value.trim();
      if(!host) return alert('Enter server IP/domain.');

      loading.classList.remove('hidden');
      result.classList.add('hidden');
      suggestionsContainer.classList.add('hidden');

      try{
        const res = await fetch(`https://api.mcsrvstat.us/2/${host}${port?`:${port}`:''}`);
        const data = await res.json();

        ui.icon.src = data.icon || 'https://www.pngall.com/wp-content/uploads/2017/05/Minecraft-PNG-Pic.png';
        ui.serverName.textContent = data.hostname || host;
        ui.onlineBadge.textContent = data.online ? 'Online' : 'Offline';
        ui.onlineBadge.className = `badge ${data.online ? 'bg-green-600/80':'bg-red-600/80'} border border-white/10`;
        ui.edition.textContent = data.software || 'Java';
        ui.ipText.textContent = host;
        ui.versionText.textContent = data.version || '—';
        ui.protocolText.textContent = data.protocol || '—';
        ui.playerCount.textContent = data.players?.online + '/' + data.players?.max || '0/0';
        ui.playerBar.style.width = data.players?.max ? (data.players.online/data.players.max*100)+'%' : '0%';
        ui.motd.innerHTML = renderMotd(data.motd?.raw || []);
        ui.ping.textContent = data.debug?.ping ?? '—';
        ui.software.textContent = data.software || '—';
        ui.eula.textContent = data.eula===true?'Yes':(data.eula===false?'No':'—');
        ui.checkedAt.textContent = fmtDate(new Date());
        ui.resolved.textContent = data.ip || '—';
        ui.portOut.textContent = data.port || port || '—';
        ui.srv.textContent = data.srv?.host || '—';
        ui.playersList.textContent = (data.players?.list || []).join(', ') || '—';

        // Suggestions
        suggestionList.innerHTML = '';
        const suggestions = [];
        if(!data.online) suggestions.push('Server is offline, check host/port.');
        if(data.players?.online && data.players.max && (data.players.online/data.players.max) < 0.2) suggestions.push('Server has low player count, may be dead.');
        if(data.version && !data.software) suggestions.push('Consider specifying server software for compatibility.');
        if(data.eula===false) suggestions.push('Server EULA not accepted.');
        if(suggestions.length>0) {
          suggestions.forEach(s=>{ const li = document.createElement('li'); li.textContent=s; suggestionList.appendChild(li); });
          suggestionsContainer.classList.remove('hidden');
        } else { suggestionsContainer.classList.add('hidden'); }

        loading.classList.add('hidden');
        result.classList.remove('hidden');
      } catch(e){
        alert('Failed to fetch server status.');
        loading.classList.add('hidden');
      }
    }
  </script>
</body>
</html>
